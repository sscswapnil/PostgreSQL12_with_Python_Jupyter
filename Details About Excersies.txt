# Download setup postgresql-12.0-1 start installation

password = root

port no = 5432

All remaining = default

cancel when ask for stack builder


# creat ssc database first

start>pgAdmin 4>servers>PostgreSQL>Databases># Rightclick> creat new Databases>ssc>Done


# Install lib in jupyter notebook

!pip install psycopg2

# Instablish the connection 

import psycopg2

conn = psycopg2.connect(database="ssc", user = "postgres", password = "root", host = "127.0.0.1", port = "5432")

print ("Opened database successfully")

################ Create a Table  ###############

# The following Python program will be used to create a table in previously created database:-

import psycopg2

conn = psycopg2.connect(database = "ssc", user = "postgres", password = "root", host = "127.0.0.1", port = "5432")
print ("Opened database successfully")

cur = conn.cursor()
cur.execute('''CREATE TABLE COMPANY
      (ID INT PRIMARY KEY     NOT NULL,
      NAME           TEXT    NOT NULL,
      AGE            INT     NOT NULL,
      ADDRESS        CHAR(50),
      SALARY         REAL);''')
print ("Table created successfully")

conn.commit()
conn.close()

################ INSERT Operation ###################

#The following Python program shows how we can create records in our COMPANY table created in the 
 above example −

conn = psycopg2.connect(database = "ssc", user = "postgres", password = "root", host = "127.0.0.1", port = "5432")
print("Opened database successfully")

cur = conn.cursor()

cur.execute("INSERT INTO COMPANY (ID,NAME,AGE,ADDRESS,SALARY) \
      VALUES (1, 'Paul', 32, 'California', 20000.00 )");

cur.execute("INSERT INTO COMPANY (ID,NAME,AGE,ADDRESS,SALARY) \
      VALUES (2, 'Allen', 25, 'Texas', 15000.00 )");

cur.execute("INSERT INTO COMPANY (ID,NAME,AGE,ADDRESS,SALARY) \
      VALUES (3, 'Teddy', 23, 'Norway', 20000.00 )");

cur.execute("INSERT INTO COMPANY (ID,NAME,AGE,ADDRESS,SALARY) \
      VALUES (4, 'Mark', 25, 'Rich-Mond ', 65000.00 )");

conn.commit()
print("Records created successfully");
conn.close()

####################### SELECT Operation   #########################

# The following Python program shows how we can fetch and display records from our COMPANY table created 
  in the above example −

import psycopg2

conn = psycopg2.connect(database = "ssc", user = "postgres", password = "root", host = "127.0.0.1", port = "5432")
print("Opened database successfully")

cur = conn.cursor()

cur.execute("SELECT id, name, address, salary  from COMPANY")
rows = cur.fetchall()
for row in rows:
   print("ID = ", row[0])
   print("NAME = ", row[1])
   print("ADDRESS = ", row[2])
   print("SALARY = ", row[3], "\n")

print("Operation done successfully");
conn.close()

### Output>

Opened database successfully
ID =  1
NAME =  Paul
ADDRESS =  California                                        
SALARY =  20000.0 

ID =  2
NAME =  Allen
ADDRESS =  Texas                                             
SALARY =  15000.0 

ID =  3
NAME =  Teddy
ADDRESS =  Norway                                            
SALARY =  20000.0 

ID =  4
NAME =  Mark
ADDRESS =  Rich-Mond                                         
SALARY =  65000.0 

Operation done successfully

####################################### UPDATE Operation ####################

# The following Python code shows how we can use the UPDATE statement to update 
  any record and then fetch and display updated records from our COMPANY table −

conn = psycopg2.connect(database = "ssc", user = "postgres", password = "root", host = "127.0.0.1", port = "5432")
print("Opened database successfully")

cur = conn.cursor()

cur.execute("UPDATE COMPANY set SALARY = 25000.00 where ID = 1")
conn.commit()
print("Total number of rows updated :", cur.rowcount)

cur.execute("SELECT id, name, address, salary  from COMPANY")
rows = cur.fetchall()
for row in rows:
   print("ID = ", row[0])
   print("NAME = ", row[1])
   print("ADDRESS = ", row[2])
   print("SALARY = ", row[3], "\n")

print("Operation done successfully");
conn.close()

## output >

Opened database successfully
Total number of rows updated : 1
ID =  2
NAME =  Allen
ADDRESS =  Texas                                             
SALARY =  15000.0 

ID =  3
NAME =  Teddy
ADDRESS =  Norway                                            
SALARY =  20000.0 

ID =  4
NAME =  Mark
ADDRESS =  Rich-Mond                                         
SALARY =  65000.0 

ID =  1
NAME =  Paul
ADDRESS =  California                                        
SALARY =  25000.0 

Operation done successfully

###################################  DELETE Operation  ###################

## The following Python code shows how we can use the DELETE statement to delete any record 
   and then fetch and display the 
   remaining records from our COMPANY table −


conn = psycopg2.connect(database = "ssc", user = "postgres", password = "root", host = "127.0.0.1", port = "5432")
print("Opened database successfully")

cur = conn.cursor()

cur.execute("DELETE from COMPANY where ID=2;")
conn.commit()
print("Total number of rows deleted :", cur.rowcount)

cur.execute("SELECT id, name, address, salary  from COMPANY")
rows = cur.fetchall()
for row in rows:
   print("ID = ", row[0])
   print("NAME = ", row[1])
   print("ADDRESS = ", row[2])
   print("SALARY = ", row[3], "\n")

print("Operation done successfully");
conn.close()

## Output>

Opened database successfully
Total number of rows deleted : 1
ID =  3
NAME =  Teddy
ADDRESS =  Norway                                            
SALARY =  20000.0 

ID =  4
NAME =  Mark
ADDRESS =  Rich-Mond                                         
SALARY =  65000.0 

ID =  1
NAME =  Paul
ADDRESS =  California                                        
SALARY =  25000.0 

Operation done successfully


